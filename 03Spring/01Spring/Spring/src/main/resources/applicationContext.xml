<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        				   http://www.springframework.org/schema/beans/spring-beans.xsd
        				   http://www.springframework.org/schema/context
        				   http://www.springframework.org/schema/context/spring-context.xsd
        				   http://www.springframework.org/schema/aop
        				   http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 创建目标类 -->
	<bean id="userServiceId" class="com.stanlong.service.impl.UserServiceImpl"></bean>

	<!-- 创建切面类 -->
	<bean id="myAspectId" class="com.stanlong.aspect.MyAspect"></bean>

	<!-- AOP编程
		1、导入AOP命名空间
		2、使用<aop:config>进行编程
			<aop:pointcut> 切入点，从目标类获得具体方法
			<aop:advisor> 特殊的切面，只有一个通知和一个切入点
				advice-ref 通知引用
				pointcut-ref 切入点引用
		3、切入点表达式
		execution(* com.stanlong.q_spring_full_auto.UserServiceImpl.*(..))
		选择方法        任意返回值                                   包.任意方法.任意返回值                                                    改成*刚表示类名任意         方法名任意       参数任意

		proxy-target-class: 声明式使用 cglib代理

		<aop:config> 开启，则由Spring进行代理，注释起来则取消代理
	 -->

	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* com.stanlong.service.impl.*.*(..))" id="myPointCut"/>
		<aop:advisor advice-ref="myAspectId" pointcut-ref="myPointCut"/>
	</aop:config>

</beans>