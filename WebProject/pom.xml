<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.stanlong</groupId>
	<artifactId>WebProject</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging> <!-- web工程打包成 war包 -->
	
	<!-- 子工程中声明父工程 (继承)-->
	<parent>
		<groupId>com.stanlong</groupId>
		<artifactId>Parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<!-- 以当前文件为基准的父工程pom.xml文件的相对路径 -->
		<relativePath>../Parent/pom.xml</relativePath>
	</parent>
	
	<!-- 通过 properties标签统一配置版本 -->
	<properties>
		<spring.version>4.0.0.RELEASE</spring.version>
	</properties>
	
	<dependencies>
		<!-- 依赖范围为 provided 不参与打包 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- 依赖范围不写默认为 compile 参与打包 -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		
		<!--依赖范围为 test 也不参与打包 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1.3-b06</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- 通过 ${spring.version} 统一配置Spring版本 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	
	<!-- 配置当前工程构建过程中的特殊设置 -->
	<build>
		<!-- 配置构建过程中需要使用的插件 -->
		<plugins>
			<plugin>
				<!-- cargo 是一家专门从事启动Servlet容器的组织 -->
				<!-- <groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.2.3</version> -->
				
				<!--针对插件进行的配置 --> 
				<!--	<configuration>
					<container>
						<containerId>tomcat6x</containerId>
						<home>D:\DevInstall\apache-tomcat-6.0.39</home>
					</container>
					<configuration>
						<type>existing</type>
						<home>D:\DevInstall\apache-tomcat-6.0.39</home>
						如果Tomcat端口为默认值8080则不必设置该属性
						<properties>
							<cargo.servlet.port>8989</cargo.servlet.port>
						</properties>
					</configuration>
				</configuration> -->
				
				<!-- 配置插件在什么情况下执行 -->
				<!-- <executions>  
					<execution>  
						<id>cargo-run</id> 
						生命周期的阶段  
						<phase>install</phase>  
						<goals>
							插件的目录
							<goal>run</goal>  
						</goals>  
					</execution>  
				</executions> -->
			</plugin>
		</plugins>
	</build>
	
	
</project>