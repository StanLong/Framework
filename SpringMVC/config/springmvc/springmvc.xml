<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd">
		
	<!-- 实际开发开发中使用组件扫描注解
		jar包版本太低会报 Failed to read candidate component class，此时需要升级jar包版本
	-->
	<context:component-scan base-package="com.stanlong.controller"></context:component-scan>
	
	<!-- mvc:annotation-driven注解驱动 ， 可代替上面两行，在实际开发中使用 -->
	<mvc:annotation-driven 
		conversion-service="conversionService"
		validator="validator"
	></mvc:annotation-driven>
	
	<!-- 视图解析器
		解析JSP视图，默认使用JSTL标签
	-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 自定义参数绑定 -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 转换器 -->
		<property name="converters">
			<list>
				<!-- 日期类型的转换 -->
				<bean class="com.stanlong.convert.CustomerDataConvert"></bean>
			</list>
		</property>
	</bean>
	
	<!-- 校验器 -->
	<!-- 低版本的 hibernate-validator 和  validation-api 包报错了，这里升级成了最新的包 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- hibernate校验器 -->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
		<!-- 指定校验使用的资源文件，在文件中配置错误校验信息 -->
		<property name="validationMessageSource" ref="messageSource"></property>
	</bean>
	
	<!-- 校验错误信息配置文件 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 资源文件名 -->
		<property name="basenames">  <!-- name名称为 basenames,资源文件后面可以不用加 properties -->
			<list>
				<value>classpath:CustomValidationMessage</value>
			</list>
		</property>
		
		<!-- 资源文件编码格式 -->
		<property name="fileEncodings" value="utf-8"></property>
		
		<!-- 对资源文件内容的缓存时间，单位：秒 -->
		<property name="cacheSeconds" value="120"></property>
	</bean>
	
	<!-- 全局异常处理器，必须实现 HandlerExceptionResolver 接口 -->
	<!-- <bean class="com.stanlong.exception.CustomerExceptionResolver"></bean> -->
	
	<!-- 图片上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸 -->
		<property name="maxUploadSize">
			<value>5242880</value> <!-- 5MB大小 -->
		</property>
	</bean>
	
	<!-- 静态资源的解析 -->
	<mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
	
	<!-- 拦截器 ,多个拦截器顺序执行-->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/> <!-- /** 表示拦截url包括子url路径 -->
			<bean class="com.stanlong.interceptor.HandlerInterceptor1"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.stanlong.interceptor.HandlerInterceptor2"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.stanlong.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>